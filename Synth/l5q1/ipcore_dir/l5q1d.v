////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____
//  /   /\/   /
// /___/  \  /    Vendor: Xilinx
// \   \   \/     Version: P.20131013
//  \   \         Application: netgen
//  /   /         Filename: l5q1d.v
// /___/   /\     Timestamp: Mon Jun 01 19:13:26 2015
// \   \  /  \ 
//  \___\/\___\
//             
// Command	: -w -sim -ofmt verilog C:/Users/Admin/Desktop/VERILOG/Lab_Work/B/Lab5/Q1/Synth/l5q1/ipcore_dir/tmp/_cg/l5q1d.ngc C:/Users/Admin/Desktop/VERILOG/Lab_Work/B/Lab5/Q1/Synth/l5q1/ipcore_dir/tmp/_cg/l5q1d.v 
// Device	: 6vcx75tff484-2
// Input file	: C:/Users/Admin/Desktop/VERILOG/Lab_Work/B/Lab5/Q1/Synth/l5q1/ipcore_dir/tmp/_cg/l5q1d.ngc
// Output file	: C:/Users/Admin/Desktop/VERILOG/Lab_Work/B/Lab5/Q1/Synth/l5q1/ipcore_dir/tmp/_cg/l5q1d.v
// # of Modules	: 1
// Design Name	: l5q1d
// Xilinx        : C:\Xilinx\14.7\ISE_DS\ISE\
//             
// Purpose:    
//     This verilog netlist is a verification model and uses simulation 
//     primitives which may not represent the true implementation of the 
//     device, however the netlist is functionally correct and should not 
//     be modified. This file cannot be synthesized and should only be used 
//     with supported simulation tools.
//             
// Reference:  
//     Command Line Tools User Guide, Chapter 23 and Synthesis and Simulation Design Guide, Chapter 6
//             
////////////////////////////////////////////////////////////////////////////////

`timescale 1 ns/1 ps

module l5q1d (
  clk, add, c_in, c_out, a, b, s
)/* synthesis syn_black_box syn_noprune=1 */;
  input clk;
  input add;
  input c_in;
  output c_out;
  input [2 : 0] a;
  input [2 : 0] b;
  output [2 : 0] s;
  
  // synthesis translate_off
  
  wire \blk00000001/sig00000013 ;
  wire \blk00000001/sig00000012 ;
  wire \blk00000001/sig00000011 ;
  wire \blk00000001/sig0000000f ;
  wire \blk00000001/sig0000000e ;
  wire \blk00000001/sig0000000d ;
  wire \NLW_blk00000001/blk00000008_MULTSIGNOUT_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_CARRYCASCOUT_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_ACOUT<29>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_ACOUT<28>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_ACOUT<27>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_ACOUT<26>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_ACOUT<25>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_ACOUT<24>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_ACOUT<23>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_ACOUT<22>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_ACOUT<21>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_ACOUT<20>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_ACOUT<19>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_ACOUT<18>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_ACOUT<17>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_ACOUT<16>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_ACOUT<15>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_ACOUT<14>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_ACOUT<13>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_ACOUT<12>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_ACOUT<11>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_ACOUT<10>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_ACOUT<9>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_ACOUT<8>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_ACOUT<7>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_ACOUT<6>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_ACOUT<5>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_ACOUT<4>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_ACOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_ACOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_ACOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_ACOUT<0>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_CARRYOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_BCOUT<17>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_BCOUT<16>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_BCOUT<15>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_BCOUT<14>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_BCOUT<13>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_BCOUT<12>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_BCOUT<11>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_BCOUT<10>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_BCOUT<9>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_BCOUT<8>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_BCOUT<7>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_BCOUT<6>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_BCOUT<5>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_BCOUT<4>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_BCOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_BCOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_BCOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_BCOUT<0>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<47>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<46>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<45>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<44>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<43>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<42>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<41>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<40>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<39>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<38>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<37>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<36>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<35>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<34>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<33>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<32>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<31>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<30>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<29>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<28>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<27>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<26>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<25>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<24>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<23>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<22>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<21>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<20>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<19>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<18>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<17>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<16>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<15>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<14>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<13>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<12>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<11>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<10>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<9>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<8>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<7>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<6>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<5>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_P<4>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<47>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<46>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<45>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<44>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<43>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<42>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<41>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<40>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<39>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<38>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<37>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<36>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<35>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<34>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<33>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<32>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<31>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<30>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<29>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<28>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<27>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<26>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<25>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<24>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<23>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<22>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<21>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<20>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<19>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<18>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<17>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<16>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<15>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<14>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<13>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<12>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<11>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<10>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<9>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<8>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<7>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<6>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<5>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<4>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PCOUT<0>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PATTERNBDETECT_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_UNDERFLOW_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_PATTERNDETECT_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_OVERFLOW_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_CARRYOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_CARRYOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000001/blk00000008_CARRYOUT<0>_UNCONNECTED ;
  DSP48E #(
    .ACASCREG ( 0 ),
    .ALUMODEREG ( 0 ),
    .AREG ( 0 ),
    .AUTORESET_PATTERN_DETECT ( "FALSE" ),
    .AUTORESET_PATTERN_DETECT_OPTINV ( "MATCH" ),
    .A_INPUT ( "DIRECT" ),
    .BCASCREG ( 0 ),
    .BREG ( 0 ),
    .B_INPUT ( "DIRECT" ),
    .CARRYINREG ( 0 ),
    .CARRYINSELREG ( 0 ),
    .CREG ( 0 ),
    .MASK ( 48'h3FFFFFFFFFFF ),
    .MREG ( 0 ),
    .MULTCARRYINREG ( 0 ),
    .OPMODEREG ( 0 ),
    .PATTERN ( 48'h000000000000 ),
    .PREG ( 1 ),
    .SEL_MASK ( "MASK" ),
    .SEL_PATTERN ( "PATTERN" ),
    .SEL_ROUNDING_MASK ( "SEL_MASK" ),
    .SIM_MODE ( "SAFE" ),
    .USE_MULT ( "NONE" ),
    .USE_PATTERN_DETECT ( "NO_PATDET" ),
    .USE_SIMD ( "ONE48" ))
  \blk00000001/blk00000008  (
    .MULTSIGNOUT(\NLW_blk00000001/blk00000008_MULTSIGNOUT_UNCONNECTED ),
    .CEP(\blk00000001/sig00000011 ),
    .CARRYCASCOUT(\NLW_blk00000001/blk00000008_CARRYCASCOUT_UNCONNECTED ),
    .CLK(clk),
    .CARRYIN(\blk00000001/sig0000000f ),
    .RSTP(\blk00000001/sig00000012 ),
    .PATTERNBDETECT(\NLW_blk00000001/blk00000008_PATTERNBDETECT_UNCONNECTED ),
    .RSTC(\blk00000001/sig00000012 ),
    .CEB1(\blk00000001/sig00000012 ),
    .CEC(\blk00000001/sig00000012 ),
    .RSTM(\blk00000001/sig00000012 ),
    .MULTSIGNIN(\blk00000001/sig00000012 ),
    .CEB2(\blk00000001/sig00000012 ),
    .RSTCTRL(\blk00000001/sig00000012 ),
    .RSTA(\blk00000001/sig00000012 ),
    .CECARRYIN(\blk00000001/sig00000012 ),
    .UNDERFLOW(\NLW_blk00000001/blk00000008_UNDERFLOW_UNCONNECTED ),
    .PATTERNDETECT(\NLW_blk00000001/blk00000008_PATTERNDETECT_UNCONNECTED ),
    .RSTALUMODE(\blk00000001/sig00000012 ),
    .RSTALLCARRYIN(\blk00000001/sig00000012 ),
    .CEALUMODE(\blk00000001/sig00000012 ),
    .CEA2(\blk00000001/sig00000012 ),
    .CEA1(\blk00000001/sig00000012 ),
    .RSTB(\blk00000001/sig00000012 ),
    .CEMULTCARRYIN(\blk00000001/sig00000012 ),
    .OVERFLOW(\NLW_blk00000001/blk00000008_OVERFLOW_UNCONNECTED ),
    .CECTRL(\blk00000001/sig00000012 ),
    .CEM(\blk00000001/sig00000012 ),
    .CARRYCASCIN(\blk00000001/sig00000012 ),
    .CARRYINSEL({\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 }),
    .ACOUT({\NLW_blk00000001/blk00000008_ACOUT<29>_UNCONNECTED , \NLW_blk00000001/blk00000008_ACOUT<28>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_ACOUT<27>_UNCONNECTED , \NLW_blk00000001/blk00000008_ACOUT<26>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_ACOUT<25>_UNCONNECTED , \NLW_blk00000001/blk00000008_ACOUT<24>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_ACOUT<23>_UNCONNECTED , \NLW_blk00000001/blk00000008_ACOUT<22>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_ACOUT<21>_UNCONNECTED , \NLW_blk00000001/blk00000008_ACOUT<20>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_ACOUT<19>_UNCONNECTED , \NLW_blk00000001/blk00000008_ACOUT<18>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_ACOUT<17>_UNCONNECTED , \NLW_blk00000001/blk00000008_ACOUT<16>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_ACOUT<15>_UNCONNECTED , \NLW_blk00000001/blk00000008_ACOUT<14>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_ACOUT<13>_UNCONNECTED , \NLW_blk00000001/blk00000008_ACOUT<12>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_ACOUT<11>_UNCONNECTED , \NLW_blk00000001/blk00000008_ACOUT<10>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_ACOUT<9>_UNCONNECTED , \NLW_blk00000001/blk00000008_ACOUT<8>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_ACOUT<7>_UNCONNECTED , \NLW_blk00000001/blk00000008_ACOUT<6>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_ACOUT<5>_UNCONNECTED , \NLW_blk00000001/blk00000008_ACOUT<4>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_ACOUT<3>_UNCONNECTED , \NLW_blk00000001/blk00000008_ACOUT<2>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_ACOUT<1>_UNCONNECTED , \NLW_blk00000001/blk00000008_ACOUT<0>_UNCONNECTED }),
    .OPMODE({\blk00000001/sig00000012 , \blk00000001/sig00000011 , \blk00000001/sig00000011 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , 
\blk00000001/sig00000011 , \blk00000001/sig00000011 }),
    .ALUMODE({\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000013 , \blk00000001/sig00000013 }),
    .C({\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , 
\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , 
\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , 
\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , 
\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , 
\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , 
\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , 
\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , 
\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , a[2], a[1], 
a[0]}),
    .CARRYOUT({\NLW_blk00000001/blk00000008_CARRYOUT<3>_UNCONNECTED , \NLW_blk00000001/blk00000008_CARRYOUT<2>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_CARRYOUT<1>_UNCONNECTED , \NLW_blk00000001/blk00000008_CARRYOUT<0>_UNCONNECTED }),
    .B({\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , 
\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , 
\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , b[2], b[1], 
b[0]}),
    .BCOUT({\NLW_blk00000001/blk00000008_BCOUT<17>_UNCONNECTED , \NLW_blk00000001/blk00000008_BCOUT<16>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_BCOUT<15>_UNCONNECTED , \NLW_blk00000001/blk00000008_BCOUT<14>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_BCOUT<13>_UNCONNECTED , \NLW_blk00000001/blk00000008_BCOUT<12>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_BCOUT<11>_UNCONNECTED , \NLW_blk00000001/blk00000008_BCOUT<10>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_BCOUT<9>_UNCONNECTED , \NLW_blk00000001/blk00000008_BCOUT<8>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_BCOUT<7>_UNCONNECTED , \NLW_blk00000001/blk00000008_BCOUT<6>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_BCOUT<5>_UNCONNECTED , \NLW_blk00000001/blk00000008_BCOUT<4>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_BCOUT<3>_UNCONNECTED , \NLW_blk00000001/blk00000008_BCOUT<2>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_BCOUT<1>_UNCONNECTED , \NLW_blk00000001/blk00000008_BCOUT<0>_UNCONNECTED }),
    .P({\NLW_blk00000001/blk00000008_P<47>_UNCONNECTED , \NLW_blk00000001/blk00000008_P<46>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_P<45>_UNCONNECTED , \NLW_blk00000001/blk00000008_P<44>_UNCONNECTED , \NLW_blk00000001/blk00000008_P<43>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_P<42>_UNCONNECTED , \NLW_blk00000001/blk00000008_P<41>_UNCONNECTED , \NLW_blk00000001/blk00000008_P<40>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_P<39>_UNCONNECTED , \NLW_blk00000001/blk00000008_P<38>_UNCONNECTED , \NLW_blk00000001/blk00000008_P<37>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_P<36>_UNCONNECTED , \NLW_blk00000001/blk00000008_P<35>_UNCONNECTED , \NLW_blk00000001/blk00000008_P<34>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_P<33>_UNCONNECTED , \NLW_blk00000001/blk00000008_P<32>_UNCONNECTED , \NLW_blk00000001/blk00000008_P<31>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_P<30>_UNCONNECTED , \NLW_blk00000001/blk00000008_P<29>_UNCONNECTED , \NLW_blk00000001/blk00000008_P<28>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_P<27>_UNCONNECTED , \NLW_blk00000001/blk00000008_P<26>_UNCONNECTED , \NLW_blk00000001/blk00000008_P<25>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_P<24>_UNCONNECTED , \NLW_blk00000001/blk00000008_P<23>_UNCONNECTED , \NLW_blk00000001/blk00000008_P<22>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_P<21>_UNCONNECTED , \NLW_blk00000001/blk00000008_P<20>_UNCONNECTED , \NLW_blk00000001/blk00000008_P<19>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_P<18>_UNCONNECTED , \NLW_blk00000001/blk00000008_P<17>_UNCONNECTED , \NLW_blk00000001/blk00000008_P<16>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_P<15>_UNCONNECTED , \NLW_blk00000001/blk00000008_P<14>_UNCONNECTED , \NLW_blk00000001/blk00000008_P<13>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_P<12>_UNCONNECTED , \NLW_blk00000001/blk00000008_P<11>_UNCONNECTED , \NLW_blk00000001/blk00000008_P<10>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_P<9>_UNCONNECTED , \NLW_blk00000001/blk00000008_P<8>_UNCONNECTED , \NLW_blk00000001/blk00000008_P<7>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_P<6>_UNCONNECTED , \NLW_blk00000001/blk00000008_P<5>_UNCONNECTED , \NLW_blk00000001/blk00000008_P<4>_UNCONNECTED , 
\blk00000001/sig0000000d , s[2], s[1], s[0]}),
    .A({\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , 
\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , 
\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , 
\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , 
\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , 
\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 }),
    .PCOUT({\NLW_blk00000001/blk00000008_PCOUT<47>_UNCONNECTED , \NLW_blk00000001/blk00000008_PCOUT<46>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_PCOUT<45>_UNCONNECTED , \NLW_blk00000001/blk00000008_PCOUT<44>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_PCOUT<43>_UNCONNECTED , \NLW_blk00000001/blk00000008_PCOUT<42>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_PCOUT<41>_UNCONNECTED , \NLW_blk00000001/blk00000008_PCOUT<40>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_PCOUT<39>_UNCONNECTED , \NLW_blk00000001/blk00000008_PCOUT<38>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_PCOUT<37>_UNCONNECTED , \NLW_blk00000001/blk00000008_PCOUT<36>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_PCOUT<35>_UNCONNECTED , \NLW_blk00000001/blk00000008_PCOUT<34>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_PCOUT<33>_UNCONNECTED , \NLW_blk00000001/blk00000008_PCOUT<32>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_PCOUT<31>_UNCONNECTED , \NLW_blk00000001/blk00000008_PCOUT<30>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_PCOUT<29>_UNCONNECTED , \NLW_blk00000001/blk00000008_PCOUT<28>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_PCOUT<27>_UNCONNECTED , \NLW_blk00000001/blk00000008_PCOUT<26>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_PCOUT<25>_UNCONNECTED , \NLW_blk00000001/blk00000008_PCOUT<24>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_PCOUT<23>_UNCONNECTED , \NLW_blk00000001/blk00000008_PCOUT<22>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_PCOUT<21>_UNCONNECTED , \NLW_blk00000001/blk00000008_PCOUT<20>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_PCOUT<19>_UNCONNECTED , \NLW_blk00000001/blk00000008_PCOUT<18>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_PCOUT<17>_UNCONNECTED , \NLW_blk00000001/blk00000008_PCOUT<16>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_PCOUT<15>_UNCONNECTED , \NLW_blk00000001/blk00000008_PCOUT<14>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_PCOUT<13>_UNCONNECTED , \NLW_blk00000001/blk00000008_PCOUT<12>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_PCOUT<11>_UNCONNECTED , \NLW_blk00000001/blk00000008_PCOUT<10>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_PCOUT<9>_UNCONNECTED , \NLW_blk00000001/blk00000008_PCOUT<8>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_PCOUT<7>_UNCONNECTED , \NLW_blk00000001/blk00000008_PCOUT<6>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_PCOUT<5>_UNCONNECTED , \NLW_blk00000001/blk00000008_PCOUT<4>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_PCOUT<3>_UNCONNECTED , \NLW_blk00000001/blk00000008_PCOUT<2>_UNCONNECTED , 
\NLW_blk00000001/blk00000008_PCOUT<1>_UNCONNECTED , \NLW_blk00000001/blk00000008_PCOUT<0>_UNCONNECTED }),
    .PCIN({\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , 
\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , 
\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , 
\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , 
\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , 
\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , 
\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , 
\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , 
\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , 
\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 }),
    .BCIN({\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , 
\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , 
\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , 
\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 }),
    .ACIN({\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , 
\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , 
\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , 
\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , 
\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , 
\blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 , \blk00000001/sig00000012 })
  );
  INV   \blk00000001/blk00000007  (
    .I(add),
    .O(\blk00000001/sig00000013 )
  );
  LUT2 #(
    .INIT ( 4'h9 ))
  \blk00000001/blk00000006  (
    .I0(\blk00000001/sig0000000d ),
    .I1(\blk00000001/sig0000000e ),
    .O(c_out)
  );
  LUT2 #(
    .INIT ( 4'h9 ))
  \blk00000001/blk00000005  (
    .I0(c_in),
    .I1(add),
    .O(\blk00000001/sig0000000f )
  );
  FD #(
    .INIT ( 1'b1 ))
  \blk00000001/blk00000004  (
    .C(clk),
    .D(add),
    .Q(\blk00000001/sig0000000e )
  );
  GND   \blk00000001/blk00000003  (
    .G(\blk00000001/sig00000012 )
  );
  VCC   \blk00000001/blk00000002  (
    .P(\blk00000001/sig00000011 )
  );

// synthesis translate_on

endmodule

// synthesis translate_off

`ifndef GLBL
`define GLBL

`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;

    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (weak1, weak0) GSR = GSR_int;
    assign (weak1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule

`endif

// synthesis translate_on
